// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoCompany.Model.Context;

namespace ToDoCompany.Model.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20221208151605_initials")]
    partial class initials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ToDoCompany.Model.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmployeeAge")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmployeePhone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ToDoCompany.Model.Entities.EmployeeTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeIdInTask")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TaskName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TaskId");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("EmployeeIdInTask");

                    b.ToTable("EmployeeTask");
                });

            modelBuilder.Entity("ToDoCompany.Model.Entities.EmployeeTask", b =>
                {
                    b.HasOne("ToDoCompany.Model.Entities.Employee", null)
                        .WithMany("Tasks")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("ToDoCompany.Model.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIdInTask")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
